plugins {
    id 'com.android.library'
}


android {
    compileSdk 31

    defaultConfig {
        minSdk 19
        targetSdk 31
        versionCode 1
        versionName "1.0"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation 'com.google.android.material:material:1.5.0'
}


task compileAidlNdk() {
    def aidl = [android.sdkDirectory, 'build-tools', android.buildToolsRevision, 'aidl'].join(File.separator)

    def outDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'aidl'].join(File.separator)
    def headerOutDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'includes'].join(File.separator)
    def searchPathForImports = [projectDir.absolutePath, 'src', 'main', 'aidl'].join(File.separator)

    def aidlFile = [projectDir.absolutePath, 'src', 'main', 'aidl', 'com', 'example', 'binder', 'common', 'IMyInterface.aidl'].join(File.separator)

    exec {
        executable(aidl)
        args('--lang=ndk', '-o', outDir, '-h', headerOutDir, '-I', searchPathForImports, aidlFile)
    }
}


afterEvaluate {
    preBuild.dependsOn(compileAidlNdk)
}


clean.doLast {
    def aidlCppOutDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'aidl'].join(File.separator)
    def aidlCppHeaderOutDir = [projectDir.absolutePath, 'src', 'main', 'cpp', 'includes', 'aidl'].join(File.separator)

    file(aidlCppOutDir).deleteDir()
    file(aidlCppHeaderOutDir).deleteDir()
}